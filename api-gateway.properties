
# CONFIGURATION CORS OPTIMISÉE =====

# Filtres globaux pour éviter la duplication des headers CORS
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials Access-Control-Allow-Methods Access-Control-Allow-Headers, RETAIN_UNIQUE

# Configuration CORS globale optimisée
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true

# Configuration CORS pour toutes les routes
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origin-patterns=http://localhost:*,http://127.0.0.1:*,http://easycom-app*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS,HEAD
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].exposed-headers=Authorization,Content-Type,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# ===== CONFIGURATION DES ROUTES =====

# Route 1: Microservice Produits
spring.cloud.gateway.routes[0].id=microservice-produits
spring.cloud.gateway.routes[0].uri=http://127.0.0.1:9001
spring.cloud.gateway.routes[0].predicates[0]=Path=/gateway-proxy/microservice-produits/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2

# Route 2: Microservice Expédition
spring.cloud.gateway.routes[1].id=microservice-expedition
spring.cloud.gateway.routes[1].uri=http://localhost:9006
spring.cloud.gateway.routes[1].predicates[0]=Path=/gateway-proxy/suivi/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=2

# Route 3: Microservice Admin
spring.cloud.gateway.routes[2].id=microservice-admin
spring.cloud.gateway.routes[2].uri=http://localhost:9002
spring.cloud.gateway.routes[2].predicates[0]=Path=/gateway-proxy/api/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[2].filters[1]=PreserveHostHeader

# ===== CONFIGURATION PERFORMANCE =====

# Timeout optimisés
spring.cloud.gateway.httpclient.connect-timeout=15000
spring.cloud.gateway.httpclient.response-timeout=30s
spring.cloud.gateway.httpclient.pool.max-idle-time=10s
spring.cloud.gateway.httpclient.pool.max-life-time=60s

# Configuration des connexions
spring.cloud.gateway.httpclient.pool.type=ELASTIC
spring.cloud.gateway.httpclient.pool.max-connections=500

# Activer les endpoints Actuator
management.endpoints.web.exposure.include=gateway,health,info,refresh
management.endpoint.gateway.enabled=true

# Configuration de logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=INFO

# CORS configuration
spring.cloud.gateway.default-filters=DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
#Spring Security
#spring.security.user.name=jiatouz
#spring.security.user.password=jiatou14101987

#tracing Sleuth 
spring.cloud.compatibility-verifier.enabled=false

#log
#logging.level.org.springframework.cloud.gateway=DEBUG
#logging.level.reactor.netty=DEBUG